{"version":3,"file":"js/941.ea9f767e.js","mappings":"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","sources":["webpack://signance-frontend/./src/views/DiagnosticView.vue","webpack://signance-frontend/./src/views/DiagnosticView.vue?5f27"],"sourcesContent":["<template>\n  <div class=\"diagnostic-container\">\n    <div class=\"header\">\n      <h1>üîß Diagn√≥stico y Soluci√≥n de Iconos</h1>\n      <p>Verificando el estado de los iconos Material Icons</p>\n    </div>\n\n    <div class=\"diagnostic-sections\">\n      <!-- Estado actual -->\n      <div class=\"section\">\n        <h2>Estado Actual</h2>\n        <div class=\"test-row\">\n          <span class=\"label\">Icono dashboard:</span>\n          <q-icon name=\"dashboard\" size=\"2rem\" class=\"test-icon\" />\n          <span class=\"icon-text\">dashboard</span>\n        </div>\n        <div class=\"test-row\">\n          <span class=\"label\">Icono play_circle_filled:</span>\n          <q-icon name=\"play_circle_filled\" size=\"2rem\" class=\"test-icon\" />\n          <span class=\"icon-text\">play_circle_filled</span>\n        </div>\n        <div class=\"test-row\">\n          <span class=\"label\">Icono arrow_forward:</span>\n          <q-icon name=\"arrow_forward\" size=\"2rem\" class=\"test-icon\" />\n          <span class=\"icon-text\">arrow_forward</span>\n        </div>\n      </div>\n\n      <!-- Pruebas directas -->\n      <div class=\"section\">\n        <h2>Pruebas Directas Material Icons</h2>\n        <div class=\"test-row\">\n          <span class=\"label\">HTML directo:</span>\n          <i class=\"material-icons test-icon\">dashboard</i>\n          <span class=\"icon-text\">dashboard</span>\n        </div>\n        <div class=\"test-row\">\n          <span class=\"label\">HTML directo:</span>\n          <i class=\"material-icons test-icon\">play_circle_filled</i>\n          <span class=\"icon-text\">play_circle_filled</span>\n        </div>\n        <div class=\"test-row\">\n          <span class=\"label\">HTML directo:</span>\n          <i class=\"material-icons test-icon\">arrow_forward</i>\n          <span class=\"icon-text\">arrow_forward</span>\n        </div>\n      </div>\n\n      <!-- Informaci√≥n del navegador -->\n      <div class=\"section\">\n        <h2>Informaci√≥n del Navegador</h2>\n        <div class=\"info-grid\">\n          <div class=\"info-item\">\n            <strong>Font Available:</strong>\n            <span>{{ fontCheck.materialIcons ? '‚úÖ Disponible' : '‚ùå No disponible' }}</span>\n          </div>\n          <div class=\"info-item\">\n            <strong>CSS Computed Style:</strong>\n            <span>{{ computedFontFamily }}</span>\n          </div>\n          <div class=\"info-item\">\n            <strong>Document Fonts:</strong>\n            <span>{{ documentFontsCount }} fuentes cargadas</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Acciones de correcci√≥n -->\n      <div class=\"section\">\n        <h2>Acciones de Correcci√≥n</h2>\n        <div class=\"actions\">\n          <q-btn \n            @click=\"forceReloadFonts\"\n            label=\"Recargar Fuentes\"\n            icon=\"refresh\"\n            color=\"primary\"\n            class=\"action-btn\"\n          />\n          <q-btn \n            @click=\"applyIconFixes\"\n            label=\"Aplicar Correcciones CSS\"\n            icon=\"build\"\n            color=\"secondary\"\n            class=\"action-btn\"\n          />\n          <q-btn \n            @click=\"testIconRendering\"\n            label=\"Probar Renderizado\"\n            icon=\"visibility\"\n            color=\"accent\"\n            class=\"action-btn\"\n          />\n        </div>\n      </div>\n\n      <!-- Log de diagn√≥stico -->\n      <div class=\"section\">\n        <h2>Log de Diagn√≥stico</h2>\n        <div class=\"log-container\">\n          <div v-for=\"(log, index) in diagnosticLogs\" :key=\"index\" :class=\"['log-entry', log.type]\">\n            <span class=\"log-timestamp\">{{ log.timestamp }}</span>\n            <span class=\"log-message\">{{ log.message }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"footer\">\n      <q-btn \n        @click=\"$router.push('/')\"\n        label=\"Volver al Inicio\"\n        icon=\"home\"\n        color=\"primary\"\n        outline\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, nextTick } from 'vue'\n\nexport default {\n  name: 'DiagnosticView',\n  setup() {\n    const fontCheck = ref({})\n    const computedFontFamily = ref('')\n    const documentFontsCount = ref(0)\n    const diagnosticLogs = ref([])\n\n    const addLog = (message, type = 'info') => {\n      diagnosticLogs.value.push({\n        timestamp: new Date().toLocaleTimeString(),\n        message,\n        type\n      })\n    }\n\n    const checkFontAvailability = () => {\n      addLog('Verificando disponibilidad de fuentes...', 'info')\n      \n      // M√©todo 1: Verificar si document.fonts existe\n      if (document.fonts) {\n        fontCheck.value.materialIcons = document.fonts.check('1em \"Material Icons\"')\n        documentFontsCount.value = document.fonts.size\n        addLog(`Document.fonts API disponible: ${document.fonts.size} fuentes`, 'success')\n      } else {\n        addLog('Document.fonts API no disponible', 'warning')\n      }\n\n      // M√©todo 2: Verificar computed style\n      const testElement = document.createElement('span')\n      testElement.style.fontFamily = 'Material Icons'\n      testElement.style.position = 'absolute'\n      testElement.style.visibility = 'hidden'\n      testElement.textContent = 'test'\n      document.body.appendChild(testElement)\n      \n      computedFontFamily.value = window.getComputedStyle(testElement).fontFamily\n      document.body.removeChild(testElement)\n      \n      addLog(`Computed font family: ${computedFontFamily.value}`, 'info')\n    }\n\n    const forceReloadFonts = async () => {\n      addLog('Forzando recarga de fuentes...', 'info')\n      \n      try {\n        // Eliminar CSS existente\n        const existingLinks = document.querySelectorAll('link[href*=\"material-icons\"], link[href*=\"fonts.googleapis.com\"]')\n        existingLinks.forEach(link => link.remove())\n\n        // Agregar nuevamente los enlaces\n        const linkElement = document.createElement('link')\n        linkElement.rel = 'stylesheet'\n        linkElement.href = 'https://fonts.googleapis.com/icon?family=Material+Icons&display=swap'\n        linkElement.onload = () => {\n          addLog('Fuentes recargadas exitosamente', 'success')\n          setTimeout(checkFontAvailability, 500)\n        }\n        linkElement.onerror = () => {\n          addLog('Error al recargar fuentes', 'error')\n        }\n        document.head.appendChild(linkElement)\n\n      } catch (error) {\n        addLog(`Error al recargar fuentes: ${error.message}`, 'error')\n      }\n    }\n\n    const applyIconFixes = () => {\n      addLog('Aplicando correcciones CSS...', 'info')\n      \n      const css = `\n        .material-icons, .q-icon {\n          font-family: 'Material Icons' !important;\n          font-weight: normal !important;\n          font-style: normal !important;\n          line-height: 1 !important;\n          letter-spacing: normal !important;\n          text-transform: none !important;\n          display: inline-block !important;\n          white-space: nowrap !important;\n          word-wrap: normal !important;\n          direction: ltr !important;\n          font-feature-settings: 'liga' !important;\n          -webkit-font-feature-settings: 'liga' !important;\n          -webkit-font-smoothing: antialiased !important;\n        }\n      `\n      \n      const styleElement = document.createElement('style')\n      styleElement.textContent = css\n      document.head.appendChild(styleElement)\n      \n      addLog('Correcciones CSS aplicadas', 'success')\n    }\n\n    const testIconRendering = () => {\n      addLog('Probando renderizado de iconos...', 'info')\n      \n      const testIcons = ['dashboard', 'play_circle_filled', 'arrow_forward']\n      \n      testIcons.forEach(iconName => {\n        const element = document.createElement('i')\n        element.className = 'material-icons'\n        element.textContent = iconName\n        element.style.position = 'absolute'\n        element.style.left = '-9999px'\n        document.body.appendChild(element)\n        \n        setTimeout(() => {\n          const rect = element.getBoundingClientRect()\n          const isRendered = rect.width > 0 && rect.height > 0\n          addLog(`Icono ${iconName}: ${isRendered ? '‚úÖ Renderizado' : '‚ùå No renderizado'}`, isRendered ? 'success' : 'error')\n          document.body.removeChild(element)\n        }, 100)\n      })\n    }\n\n    onMounted(async () => {\n      addLog('Iniciando diagn√≥stico de iconos...', 'info')\n      \n      await nextTick()\n      setTimeout(() => {\n        checkFontAvailability()\n        testIconRendering()\n      }, 1000)\n    })\n\n    return {\n      fontCheck,\n      computedFontFamily,\n      documentFontsCount,\n      diagnosticLogs,\n      forceReloadFonts,\n      applyIconFixes,\n      testIconRendering\n    }\n  }\n}\n</script>\n\n<style scoped>\n.diagnostic-container {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n}\n\n.header {\n  text-align: center;\n  margin-bottom: 30px;\n  padding: 20px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 12px;\n}\n\n.header h1 {\n  margin: 0 0 10px 0;\n  font-size: 2rem;\n}\n\n.header p {\n  margin: 0;\n  opacity: 0.9;\n}\n\n.diagnostic-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.section {\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e0e0e0;\n}\n\n.section h2 {\n  margin: 0 0 15px 0;\n  color: #333;\n  border-bottom: 2px solid #667eea;\n  padding-bottom: 5px;\n}\n\n.test-row {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 10px;\n  padding: 10px;\n  background: #f8f9fa;\n  border-radius: 6px;\n}\n\n.label {\n  min-width: 150px;\n  font-weight: 500;\n}\n\n.test-icon {\n  color: #667eea;\n  background: white;\n  padding: 5px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n.icon-text {\n  font-family: monospace;\n  background: #ffe6e6;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 0.8rem;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 15px;\n}\n\n.info-item {\n  padding: 10px;\n  background: #f8f9fa;\n  border-radius: 6px;\n  border-left: 4px solid #667eea;\n}\n\n.actions {\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n}\n\n.action-btn {\n  min-width: 150px;\n}\n\n.log-container {\n  max-height: 300px;\n  overflow-y: auto;\n  background: #f8f9fa;\n  border-radius: 6px;\n  padding: 10px;\n}\n\n.log-entry {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 8px;\n  padding: 6px;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.log-entry.info {\n  background: #e3f2fd;\n  color: #1565c0;\n}\n\n.log-entry.success {\n  background: #e8f5e8;\n  color: #2e7d32;\n}\n\n.log-entry.warning {\n  background: #fff3e0;\n  color: #ef6c00;\n}\n\n.log-entry.error {\n  background: #ffebee;\n  color: #c62828;\n}\n\n.log-timestamp {\n  font-family: monospace;\n  font-size: 0.8rem;\n  opacity: 0.7;\n  min-width: 80px;\n}\n\n.footer {\n  margin-top: 30px;\n  text-align: center;\n}\n\n/* Dark mode */\n.body--dark .section {\n  background: #1e1e1e;\n  border-color: #333;\n}\n\n.body--dark .section h2 {\n  color: #e0e0e0;\n}\n\n.body--dark .test-row,\n.body--dark .info-item,\n.body--dark .log-container {\n  background: #2a2a2a;\n}\n\n@media (max-width: 768px) {\n  .actions {\n    flex-direction: column;\n  }\n  \n  .action-btn {\n    width: 100%;\n  }\n  \n  .test-row {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n}\n</style>\n","import { render } from \"./DiagnosticView.vue?vue&type=template&id=631a3825&scoped=true\"\nimport script from \"./DiagnosticView.vue?vue&type=script&lang=js\"\nexport * from \"./DiagnosticView.vue?vue&type=script&lang=js\"\n\nimport \"./DiagnosticView.vue?vue&type=style&index=0&id=631a3825&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-631a3825\"]])\n\nexport default __exports__"],"names":["class","name","size","fontCheck","materialIcons","computedFontFamily","documentFontsCount","forceReloadFonts","label","icon","color","applyIconFixes","testIconRendering","diagnosticLogs","log","index","key","type","timestamp","message","$router","push","outline","setup","addLog","value","Date","toLocaleTimeString","checkFontAvailability","document","fonts","check","testElement","createElement","style","fontFamily","position","visibility","textContent","body","appendChild","window","getComputedStyle","removeChild","async","existingLinks","querySelectorAll","forEach","link","remove","linkElement","rel","href","onload","setTimeout","onerror","head","error","css","styleElement","testIcons","iconName","element","className","left","rect","getBoundingClientRect","isRendered","width","height","__exports__","render"],"sourceRoot":""}