{"version":3,"file":"js/650.645265dc.js","mappings":"2MACOA,MAAM,e,GAGJA,MAAM,gB,GAEJA,MAAM,a,GAINA,MAAM,a,GAINA,MAAM,a,GAsBRA,MAAM,gB,GAONA,MAAM,gB,qEA1Cb,QA8CM,MA9CN,EA8CM,C,aA7CJ,QAAgC,UAA5B,2BAAuB,KAE3B,QAcM,MAdN,EAcM,C,aAbJ,QAAsC,UAAlC,iCAA6B,KACjC,QAGM,MAHN,EAGM,EAFJ,QAAkD,GAA1CC,KAAK,OAAOC,KAAK,OAAOC,MAAM,Y,aACtC,QAAiD,YAA3C,wCAAoC,OAE5C,QAGM,MAHN,EAGM,EAFJ,QAAgD,GAAxCF,KAAK,OAAOC,KAAK,OAAOC,MAAM,U,aACtC,QAA4C,YAAtC,mCAA+B,OAEvC,QAGM,MAHN,EAGM,EAFJ,QAAkD,GAA1CF,KAAK,WAAWC,KAAK,OAAOC,MAAM,Q,aAC1C,QAA+C,YAAzC,sCAAkC,Q,iqBAoB5C,QAKM,MALN,EAKM,C,aAJJ,QAAsB,UAAlB,iBAAa,KACjB,QAA4D,U,aAAzD,QAAkC,cAA1B,qBAAiB,K,QAAS,KAAC,QAAG,EAAAC,cAAY,MACrD,QAAuD,U,aAApD,QAA2B,cAAnB,cAAU,K,QAAS,KAAC,QAAG,EAAAC,gBAAc,MAChD,QAAoE,UAA3D,QAAK,oBAAE,EAAAC,UAAA,EAAAA,YAAA,IAAUN,MAAM,YAAW,uBAG7C,QAGM,MAHN,EAGM,C,aAFJ,QAAsB,UAAlB,iBAAa,KACjB,QAA0B,oBAAlB,EAAAO,WAAS,M,cAQvB,GACEN,KAAM,iBACN,KAAAO,GACE,MAAMJ,GAAe,QAAI,IACnBC,GAAiB,QAAI,IACrBE,GAAY,QAAI,CAAC,GAEjBD,EAAW,KAEf,MAAMG,EAASC,SAASC,cAAc,KACtCF,EAAOG,UAAY,iBACnBH,EAAOI,YAAc,OACrBJ,EAAOK,MAAMC,SAAW,WACxBN,EAAOK,MAAME,KAAO,UACpBN,SAASO,KAAKC,YAAYT,GAE1BL,EAAae,MAAQC,OAAOC,iBAAiBZ,GAAQa,WAGrDC,YAAW,KACT,MAAMC,EAAOf,EAAOgB,wBACpBlB,EAAUY,MAAQ,CAChBO,MAAOF,EAAKE,MACZC,OAAQH,EAAKG,OACbL,WAAYF,OAAOC,iBAAiBZ,GAAQa,WAC5CM,SAAUR,OAAOC,iBAAiBZ,GAAQmB,SAC1Cf,YAAaJ,EAAOI,YACpBgB,YAAapB,EAAOoB,YACpBC,aAAcrB,EAAOqB,cAEvBpB,SAASO,KAAKc,YAAYtB,KACzB,KAGCC,SAASsB,MACX3B,EAAec,MAAQ,GAAGT,SAASsB,MAAM9B,0CAA0CQ,SAASsB,MAAMC,MAAM,yBAA2B,KAAO,OAE1I5B,EAAec,MAAQ,2BAQ3B,OAJA,SAAU,KACRI,WAAWjB,EAAU,QAGhB,CACLF,eACAC,iBACAE,YACAD,WAEJ,G,SCjGF,MAAM4B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://signance-frontend/./src/views/SimpleIconTest.vue","webpack://signance-frontend/./src/views/SimpleIconTest.vue?7541"],"sourcesContent":["<template>\n  <div class=\"simple-test\">\n    <h1>Prueba Simple de Iconos</h1>\n    \n    <div class=\"test-section\">\n      <h2>1. Test Quasar Icon Component</h2>\n      <div class=\"icon-test\">\n        <q-icon name=\"home\" size=\"2rem\" color=\"primary\" />\n        <span>home (debería mostrar ícono de casa)</span>\n      </div>\n      <div class=\"icon-test\">\n        <q-icon name=\"star\" size=\"2rem\" color=\"amber\" />\n        <span>star (debería mostrar estrella)</span>\n      </div>\n      <div class=\"icon-test\">\n        <q-icon name=\"favorite\" size=\"2rem\" color=\"red\" />\n        <span>favorite (debería mostrar corazón)</span>\n      </div>\n    </div>\n\n    <div class=\"test-section\">\n      <h2>2. Test HTML + CSS directo</h2>\n      <div class=\"icon-test\">\n        <i class=\"material-icons\" style=\"font-size: 2rem; color: blue;\">home</i>\n        <span>home (HTML directo)</span>\n      </div>\n      <div class=\"icon-test\">\n        <i class=\"material-icons\" style=\"font-size: 2rem; color: orange;\">star</i>\n        <span>star (HTML directo)</span>\n      </div>\n      <div class=\"icon-test\">\n        <i class=\"material-icons\" style=\"font-size: 2rem; color: red;\">favorite</i>\n        <span>favorite (HTML directo)</span>\n      </div>\n    </div>\n\n    <div class=\"test-section\">\n      <h2>3. Font Check</h2>\n      <p><strong>Fuente computada:</strong> {{ computedFont }}</p>\n      <p><strong>Fonts API:</strong> {{ fontsApiStatus }}</p>\n      <button @click=\"runTests\" class=\"test-btn\">Ejecutar Pruebas</button>\n    </div>\n\n    <div class=\"test-section\">\n      <h2>4. Debug Info</h2>\n      <pre>{{ debugInfo }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\n\nexport default {\n  name: 'SimpleIconTest',\n  setup() {\n    const computedFont = ref('')\n    const fontsApiStatus = ref('')\n    const debugInfo = ref({})\n\n    const runTests = () => {\n      // Test 1: Crear elemento de prueba\n      const testEl = document.createElement('i')\n      testEl.className = 'material-icons'\n      testEl.textContent = 'home'\n      testEl.style.position = 'absolute'\n      testEl.style.left = '-9999px'\n      document.body.appendChild(testEl)\n\n      computedFont.value = window.getComputedStyle(testEl).fontFamily\n      \n      // Test 2: Verificar si el icono se renderiza\n      setTimeout(() => {\n        const rect = testEl.getBoundingClientRect()\n        debugInfo.value = {\n          width: rect.width,\n          height: rect.height,\n          fontFamily: window.getComputedStyle(testEl).fontFamily,\n          fontSize: window.getComputedStyle(testEl).fontSize,\n          textContent: testEl.textContent,\n          offsetWidth: testEl.offsetWidth,\n          offsetHeight: testEl.offsetHeight\n        }\n        document.body.removeChild(testEl)\n      }, 100)\n\n      // Test 3: Fonts API\n      if (document.fonts) {\n        fontsApiStatus.value = `${document.fonts.size} fuentes cargadas. Material Icons: ${document.fonts.check('1rem \"Material Icons\"') ? 'OK' : 'NO'}`\n      } else {\n        fontsApiStatus.value = 'Fonts API no disponible'\n      }\n    }\n\n    onMounted(() => {\n      setTimeout(runTests, 1000)\n    })\n\n    return {\n      computedFont,\n      fontsApiStatus,\n      debugInfo,\n      runTests\n    }\n  }\n}\n</script>\n\n<style scoped>\n.simple-test {\n  padding: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.test-section {\n  margin-bottom: 30px;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background: #f9f9f9;\n}\n\n.icon-test {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 10px;\n  padding: 10px;\n  background: white;\n  border-radius: 4px;\n}\n\n.test-btn {\n  background: #1976d2;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.test-btn:hover {\n  background: #1565c0;\n}\n\npre {\n  background: #f0f0f0;\n  padding: 10px;\n  border-radius: 4px;\n  overflow: auto;\n  font-size: 12px;\n}\n\n/* Forzar Material Icons */\n.material-icons {\n  font-family: 'Material Icons' !important;\n  font-weight: normal !important;\n  font-style: normal !important;\n  line-height: 1 !important;\n  letter-spacing: normal !important;\n  text-transform: none !important;\n  display: inline-block !important;\n  white-space: nowrap !important;\n  word-wrap: normal !important;\n  direction: ltr !important;\n  font-feature-settings: 'liga' !important;\n  -webkit-font-feature-settings: 'liga' !important;\n  -webkit-font-smoothing: antialiased !important;\n}\n</style>\n","import { render } from \"./SimpleIconTest.vue?vue&type=template&id=032377ad&scoped=true\"\nimport script from \"./SimpleIconTest.vue?vue&type=script&lang=js\"\nexport * from \"./SimpleIconTest.vue?vue&type=script&lang=js\"\n\nimport \"./SimpleIconTest.vue?vue&type=style&index=0&id=032377ad&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-032377ad\"]])\n\nexport default __exports__"],"names":["class","name","size","color","computedFont","fontsApiStatus","runTests","debugInfo","setup","testEl","document","createElement","className","textContent","style","position","left","body","appendChild","value","window","getComputedStyle","fontFamily","setTimeout","rect","getBoundingClientRect","width","height","fontSize","offsetWidth","offsetHeight","removeChild","fonts","check","__exports__","render"],"sourceRoot":""}