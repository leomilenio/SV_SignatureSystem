{"version":3,"file":"js/289.3e9580c5.js","mappings":"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","sources":["webpack://signance-frontend/./src/views/FinalIconTest.vue","webpack://signance-frontend/./src/views/FinalIconTest.vue?716a"],"sourcesContent":["<template>\n  <div class=\"final-test-container\">\n    <div class=\"header\">\n      <h1>üéØ Prueba Final de Iconos</h1>\n      <p>Verificaci√≥n completa del sistema de iconos Material Icons</p>\n    </div>\n\n    <!-- Estado actual -->\n    <div class=\"status-section\">\n      <div class=\"status-card\" :class=\"iconStatus.overall\">\n        <h2>Estado General: {{ iconStatus.message }}</h2>\n        <div class=\"status-details\">\n          <div>‚úÖ Fuentes cargadas: {{ debugInfo.fontsAPI?.size || 'N/A' }}</div>\n          <div>{{ debugInfo.fontsAPI?.materialIconsCheck ? '‚úÖ' : '‚ùå' }} Material Icons disponible</div>\n          <div>{{ materialIconsLinks.length > 0 ? '‚úÖ' : '‚ùå' }} Enlaces de fuentes: {{ materialIconsLinks.length }}</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Pruebas de iconos principales -->\n    <div class=\"main-tests\">\n      <h2>üß™ Pruebas de Iconos Principales</h2>\n      <div class=\"icon-tests-grid\">\n        <div v-for=\"test in iconTests\" :key=\"test.name\" class=\"icon-test-card\">\n          <div class=\"test-header\">\n            <h3>{{ test.name }}</h3>\n            <span :class=\"['status-badge', test.status]\">{{ test.status }}</span>\n          </div>\n          \n          <div class=\"test-content\">\n            <div class=\"icon-display\">\n              <q-icon :name=\"test.iconName\" size=\"3rem\" :color=\"test.status === 'success' ? 'positive' : 'negative'\" />\n            </div>\n            <div class=\"icon-info\">\n              <p><strong>C√≥digo:</strong> <code>{{ test.iconName }}</code></p>\n              <p><strong>Componente:</strong> <code>&lt;q-icon name=\"{{ test.iconName }}\" /&gt;</code></p>\n              <p v-if=\"test.availability !== undefined\"><strong>Disponible:</strong> {{ test.availability ? 'S√≠' : 'No' }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Acciones de correcci√≥n -->\n    <div class=\"actions-section\">\n      <h2>üîß Acciones de Correcci√≥n</h2>\n      <div class=\"actions-grid\">\n        <q-btn \n          @click=\"runFullTest\"\n          label=\"Ejecutar Prueba Completa\"\n          icon=\"play_arrow\"\n          color=\"primary\"\n          size=\"lg\"\n          :loading=\"testRunning\"\n        />\n        <q-btn \n          @click=\"forceReloadIcons\"\n          label=\"Recargar Iconos\"\n          icon=\"refresh\"\n          color=\"secondary\"\n          size=\"lg\"\n        />\n        <q-btn \n          @click=\"exportDebugReport\"\n          label=\"Exportar Reporte\"\n          icon=\"download\"\n          color=\"accent\"\n          size=\"lg\"\n        />\n      </div>\n    </div>\n\n    <!-- Log en tiempo real -->\n    <div class=\"log-section\">\n      <h2>üìã Log de Diagn√≥stico</h2>\n      <div class=\"log-container\">\n        <div v-for=\"(log, index) in logs\" :key=\"index\" :class=\"['log-entry', log.type]\">\n          <span class=\"log-time\">{{ log.time }}</span>\n          <span class=\"log-message\">{{ log.message }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Informaci√≥n t√©cnica detallada -->\n    <div class=\"technical-section\">\n      <q-expansion-item label=\"üîç Informaci√≥n T√©cnica Detallada\" icon=\"info\">\n        <div class=\"tech-content\">\n          <h3>Debug Info</h3>\n          <pre>{{ JSON.stringify(debugInfo, null, 2) }}</pre>\n        </div>\n      </q-expansion-item>\n    </div>\n\n    <!-- Navegaci√≥n -->\n    <div class=\"navigation\">\n      <q-btn \n        @click=\"$router.push('/')\"\n        label=\"Ir al Inicio\"\n        icon=\"home\"\n        color=\"primary\"\n        outline\n      />\n      <q-btn \n        @click=\"openMainApp\"\n        label=\"Abrir Aplicaci√≥n\"\n        icon=\"launch\"\n        color=\"positive\"\n        :disable=\"iconStatus.overall !== 'success'\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { checkIconAvailability, getIconDebugInfo } from '../utils/iconUtils'\n\nexport default {\n  name: 'FinalIconTest',\n  setup() {\n    const router = useRouter()\n    const testRunning = ref(false)\n    const logs = ref([])\n    const debugInfo = ref({})\n    const materialIconsLinks = ref([])\n    \n    const iconStatus = reactive({\n      overall: 'pending',\n      message: 'Ejecutando pruebas...'\n    })\n\n    const iconTests = ref([\n      { name: 'Dashboard', iconName: 'dashboard', status: 'pending' },\n      { name: 'Reproducir', iconName: 'play_circle_filled', status: 'pending' },\n      { name: 'Siguiente', iconName: 'arrow_forward', status: 'pending' },\n      { name: 'Configuraci√≥n', iconName: 'settings', status: 'pending' },\n      { name: 'Video', iconName: 'video_library', status: 'pending' },\n      { name: 'Subir', iconName: 'cloud_upload', status: 'pending' }\n    ])\n\n    const addLog = (message, type = 'info') => {\n      logs.value.unshift({\n        time: new Date().toLocaleTimeString(),\n        message,\n        type\n      })\n      \n      // Mantener solo los √∫ltimos 20 logs\n      if (logs.value.length > 20) {\n        logs.value = logs.value.slice(0, 20)\n      }\n    }\n\n    const runFullTest = async () => {\n      testRunning.value = true\n      addLog('Iniciando prueba completa de iconos...', 'info')\n      \n      try {\n        // Obtener informaci√≥n de debug\n        debugInfo.value = getIconDebugInfo()\n        addLog('Informaci√≥n de debug obtenida', 'success')\n        \n        // Buscar enlaces de Material Icons\n        materialIconsLinks.value = debugInfo.value.materialIconsLinks || []\n        addLog(`Encontrados ${materialIconsLinks.value.length} enlaces de Material Icons`, 'info')\n        \n        // Probar cada icono\n        let successCount = 0\n        for (const test of iconTests.value) {\n          addLog(`Probando icono: ${test.iconName}`, 'info')\n          \n          try {\n            const isAvailable = await checkIconAvailability(test.iconName)\n            test.availability = isAvailable\n            test.status = isAvailable ? 'success' : 'error'\n            \n            if (isAvailable) {\n              successCount++\n              addLog(`‚úÖ ${test.iconName} disponible`, 'success')\n            } else {\n              addLog(`‚ùå ${test.iconName} no disponible`, 'error')\n            }\n          } catch (error) {\n            test.status = 'error'\n            addLog(`Error probando ${test.iconName}: ${error.message}`, 'error')\n          }\n        }\n        \n        // Determinar estado general\n        const totalTests = iconTests.value.length\n        const successRate = successCount / totalTests\n        \n        if (successRate >= 0.8) {\n          iconStatus.overall = 'success'\n          iconStatus.message = `Excelente! ${successCount}/${totalTests} iconos funcionando`\n          addLog('üéâ Sistema de iconos funcionando correctamente', 'success')\n        } else if (successRate >= 0.5) {\n          iconStatus.overall = 'warning'\n          iconStatus.message = `Parcial: ${successCount}/${totalTests} iconos funcionando`\n          addLog('‚ö†Ô∏è Algunos iconos no cargan correctamente', 'warning')\n        } else {\n          iconStatus.overall = 'error'\n          iconStatus.message = `Problemas: solo ${successCount}/${totalTests} iconos funcionando`\n          addLog('‚ùå Sistema de iconos tiene problemas significativos', 'error')\n        }\n        \n      } catch (error) {\n        iconStatus.overall = 'error'\n        iconStatus.message = 'Error durante las pruebas'\n        addLog(`Error en prueba completa: ${error.message}`, 'error')\n      } finally {\n        testRunning.value = false\n      }\n    }\n\n    const forceReloadIcons = () => {\n      addLog('Forzando recarga de iconos...', 'info')\n      \n      // Recargar la p√°gina para aplicar todas las correcciones\n      setTimeout(() => {\n        window.location.reload()\n      }, 1000)\n    }\n\n    const exportDebugReport = () => {\n      const report = {\n        timestamp: new Date().toISOString(),\n        iconStatus: iconStatus,\n        iconTests: iconTests.value,\n        debugInfo: debugInfo.value,\n        logs: logs.value,\n        userAgent: navigator.userAgent,\n        url: window.location.href\n      }\n      \n      const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' })\n      const url = URL.createObjectURL(blob)\n      \n      const link = document.createElement('a')\n      link.href = url\n      link.download = `icon-debug-report-${new Date().getTime()}.json`\n      link.click()\n      \n      URL.revokeObjectURL(url)\n      addLog('Reporte de debug exportado', 'success')\n    }\n\n    const openMainApp = () => {\n      router.push('/admin')\n    }\n\n    onMounted(() => {\n      addLog('P√°gina de prueba final cargada', 'info')\n      setTimeout(() => {\n        runFullTest()\n      }, 1000)\n    })\n\n    return {\n      testRunning,\n      logs,\n      debugInfo,\n      materialIconsLinks,\n      iconStatus,\n      iconTests,\n      runFullTest,\n      forceReloadIcons,\n      exportDebugReport,\n      openMainApp\n    }\n  }\n}\n</script>\n\n<style scoped>\n.final-test-container {\n  padding: 20px;\n  max-width: 1400px;\n  margin: 0 auto;\n  background: #f5f5f5;\n  min-height: 100vh;\n}\n\n.header {\n  text-align: center;\n  margin-bottom: 30px;\n  padding: 30px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 16px;\n}\n\n.status-section {\n  margin-bottom: 30px;\n}\n\n.status-card {\n  padding: 20px;\n  border-radius: 12px;\n  text-align: center;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n}\n\n.status-card.success {\n  background: linear-gradient(135deg, #4caf50 0%, #81c784 100%);\n  color: white;\n}\n\n.status-card.warning {\n  background: linear-gradient(135deg, #ff9800 0%, #ffb74d 100%);\n  color: white;\n}\n\n.status-card.error {\n  background: linear-gradient(135deg, #f44336 0%, #e57373 100%);\n  color: white;\n}\n\n.status-card.pending {\n  background: linear-gradient(135deg, #2196f3 0%, #64b5f6 100%);\n  color: white;\n}\n\n.status-details {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 15px;\n  font-size: 0.9rem;\n}\n\n.main-tests {\n  margin-bottom: 30px;\n}\n\n.icon-tests-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.icon-test-card {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  border: 1px solid #e0e0e0;\n}\n\n.test-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.status-badge {\n  padding: 4px 12px;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n.status-badge.success {\n  background: #4caf50;\n  color: white;\n}\n\n.status-badge.error {\n  background: #f44336;\n  color: white;\n}\n\n.status-badge.pending {\n  background: #2196f3;\n  color: white;\n}\n\n.test-content {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n.icon-display {\n  flex-shrink: 0;\n}\n\n.icon-info {\n  flex: 1;\n}\n\n.icon-info code {\n  background: #f5f5f5;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.actions-section, .log-section {\n  margin-bottom: 30px;\n}\n\n.actions-grid {\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.log-container {\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  max-height: 300px;\n  overflow-y: auto;\n  border: 1px solid #e0e0e0;\n}\n\n.log-entry {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 8px;\n  padding: 6px;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.log-entry.info {\n  background: #e3f2fd;\n  color: #1565c0;\n}\n\n.log-entry.success {\n  background: #e8f5e8;\n  color: #2e7d32;\n}\n\n.log-entry.warning {\n  background: #fff3e0;\n  color: #ef6c00;\n}\n\n.log-entry.error {\n  background: #ffebee;\n  color: #c62828;\n}\n\n.log-time {\n  font-family: monospace;\n  font-size: 0.8rem;\n  opacity: 0.7;\n  min-width: 80px;\n}\n\n.technical-section {\n  margin-bottom: 30px;\n}\n\n.tech-content {\n  padding: 20px;\n  background: #f9f9f9;\n  border-radius: 8px;\n}\n\n.tech-content pre {\n  background: white;\n  padding: 15px;\n  border-radius: 6px;\n  overflow: auto;\n  font-size: 0.8rem;\n  border: 1px solid #e0e0e0;\n}\n\n.navigation {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  padding: 30px;\n}\n\n@media (max-width: 768px) {\n  .test-content {\n    flex-direction: column;\n    text-align: center;\n  }\n  \n  .actions-grid {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .status-details {\n    flex-direction: column;\n    gap: 5px;\n  }\n}\n</style>\n","import { render } from \"./FinalIconTest.vue?vue&type=template&id=1c2d8054&scoped=true\"\nimport script from \"./FinalIconTest.vue?vue&type=script&lang=js\"\nexport * from \"./FinalIconTest.vue?vue&type=script&lang=js\"\n\nimport \"./FinalIconTest.vue?vue&type=style&index=0&id=1c2d8054&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1c2d8054\"]])\n\nexport default __exports__"],"names":["class","iconStatus","overall","message","debugInfo","fontsAPI","size","materialIconsCheck","materialIconsLinks","length","iconTests","test","key","name","status","iconName","color","undefined","availability","runFullTest","label","icon","loading","testRunning","forceReloadIcons","exportDebugReport","logs","log","index","type","time","JSON","stringify","$router","push","outline","openMainApp","disable","setup","router","addLog","value","unshift","Date","toLocaleTimeString","slice","async","successCount","isAvailable","error","totalTests","successRate","setTimeout","window","location","reload","report","timestamp","toISOString","userAgent","navigator","url","href","blob","Blob","URL","createObjectURL","link","document","createElement","download","getTime","click","revokeObjectURL","__exports__","render"],"sourceRoot":""}